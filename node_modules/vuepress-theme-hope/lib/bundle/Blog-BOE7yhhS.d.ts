import * as vue from 'vue';
import { VNode, SlotsType } from 'vue';
import { SlotContent, Slot } from '@vuepress/helper/client';
import { B as BloggerInfoSlotData, S as SidebarItemsSlotData, A as ArticleCoverSlotData, a as ArticleTitleSlotData, b as ArticleInfoSlotData, c as ArticleExcerptSlotData, H as HeroInfoSlotData, d as HeroImageSlotData, e as HeroBackgroundSlotData } from './slots-Ch2oCmtX.js';

declare const _default$2: vue.DefineComponent<{}, () => VNode, {}, {}, {}, vue.ComponentOptionsMixin, vue.ComponentOptionsMixin, {}, string, vue.PublicProps, Readonly<{}> & Readonly<{}>, {}, SlotsType<{
    bloggerInfo?: (bloggerInfo: BloggerInfoSlotData) => SlotContent;
}>, {}, {}, string, vue.ComponentProvideOptions, true, {}, any>;

declare const _default$1: vue.DefineComponent<{}, () => VNode | null, {}, {}, {}, vue.ComponentOptionsMixin, vue.ComponentOptionsMixin, {}, string, vue.PublicProps, Readonly<{}> & Readonly<{}>, {}, {}, {}, {}, string, vue.ComponentProvideOptions, true, {}, any>;

declare const _default: vue.DefineComponent<{}, () => VNode, {}, {}, {}, vue.ComponentOptionsMixin, vue.ComponentOptionsMixin, {}, string, vue.PublicProps, Readonly<{}> & Readonly<{}>, {}, SlotsType<{
    default?: Slot;
    navScreenTop?: Slot;
    navScreenBottom?: Slot;
    sidebarItems?: (sidebarItems: SidebarItemsSlotData) => SlotContent;
    sidebarTop?: Slot;
    sidebarBottom?: Slot;
    articleCover?: (props: ArticleCoverSlotData) => SlotContent;
    articleTitle?: (props: ArticleTitleSlotData) => SlotContent;
    articleInfo?: (props: ArticleInfoSlotData) => SlotContent;
    articleExcerpt?: (props: ArticleExcerptSlotData) => SlotContent;
    articlesBefore?: Slot;
    articlesAfter?: Slot;
    bloggerInfo?: (bloggerInfo: BloggerInfoSlotData) => SlotContent;
    infoBefore?: Slot;
    infoAfter?: Slot;
    content?: Slot;
    contentBefore?: Slot;
    contentAfter?: Slot;
    heroInfo?: (props: HeroInfoSlotData) => SlotContent;
    heroLogo?: (props: HeroImageSlotData) => SlotContent;
    heroBg?: (props: HeroBackgroundSlotData) => SlotContent;
    heroBefore?: Slot;
    heroAfter?: Slot;
}>, {}, {}, string, vue.ComponentProvideOptions, true, {}, any>;

export { _default$2 as _, _default$1 as a, _default as b };
