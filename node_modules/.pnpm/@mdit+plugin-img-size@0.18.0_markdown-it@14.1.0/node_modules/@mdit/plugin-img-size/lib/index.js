const g=(e,s,i)=>{let n;const r=s,a={ok:!1,pos:s,value:""};for(n=e.charAt(s);s<i&&/\d/.test(n)||n==="%";)n=e.charAt(++s);return a.ok=!0,a.pos=s,a.value=e.slice(r,s),a},A=(e,s,i)=>{const n={ok:!1,pos:0,width:"",height:""};if(s>=i||e.charAt(s)!=="=")return n;s++;const r=e.charAt(s);if(r!=="x"&&!/\d/.test(r))return n;const a=g(e,s,i);if(s=a.pos,e.charAt(s)!=="x")return n;s++;const l=g(e,s,i);return s=l.pos,n.width=a.value,n.height=l.value,n.pos=s,n.ok=!0,n},k=(e,s)=>{const i=e.env,n=e.pos,r=e.posMax;if(e.src.charAt(e.pos)!=="!"||e.src.charAt(e.pos+1)!=="[")return!1;const a=e.pos+2,l=e.md.helpers.parseLinkLabel(e,e.pos+1,!1);if(l<0)return!1;let t=l+1,o,h="",u="",d="",m="";if(t<r&&e.src.charAt(t)==="("){for(t++;t<r&&(o=e.src.charAt(t),!(o!==" "&&o!=="	"));)t++;if(t>=r)return!1;let c;c=e.md.helpers.parseLinkDestination(e.src,t,e.posMax),c.ok&&(h=e.md.normalizeLink(c.str),e.md.validateLink(h)?t=c.pos:h="");const f=t;for(;t<r&&(o=e.src.charAt(t),!(o!==" "&&o!=="	"));t++);if(c=e.md.helpers.parseLinkTitle(e.src,t,e.posMax),t<r&&f!==t&&c.ok)for(u=c.str,t=c.pos;t<r&&(o=e.src.charAt(t),!(o!==" "&&o!=="	"));t++);else u="";if(t-1>=0&&(o=e.src.charAt(t-1),o===" "&&(c=A(e.src,t,e.posMax),c.ok)))for(d=c.width,m=c.height,t=c.pos;t<r&&(o=e.src.charAt(t),!(o!==" "&&o!==`
`));t++);if(t>=r||e.src.charAt(t)!==")")return e.pos=n,!1;t++}else{let c="";if(typeof i.references>"u")return!1;for(;t<r&&(o=e.src.charAt(t),!(o!==" "&&o!=="	"));t++);if(t<r&&e.src.charAt(t)==="["){const p=t+1;t=e.md.helpers.parseLinkLabel(e,t),t>=0?c=e.src.slice(p,t++):t=l+1}else t=l+1;c||(c=e.src.slice(a,l));const f=i.references[e.md.utils.normalizeReference(c)];if(!f)return e.pos=n,!1;h=f.href,u=f.title??""}if(!s){e.pos=a,e.posMax=l;const c=e.src.slice(a,l),f=[];e.md.inline.parse(c,e.md,e.env,f);const p=e.push("image","img",0);p.attrs=[["src",h],["alt",""]],u&&p.attrs.push(["title",u]),d&&p.attrs.push(["width",d]),m&&p.attrs.push(["height",m]),p.children=f,p.content=c}return e.pos=t,e.posMax=r,!0},x=e=>{e.inline.ruler.before("emphasis","image",k)},L=/^(.*?)\|\s*(\d+)\s*x\s*(\d+)\s*$/,S=e=>{const s=e.renderer.rules.image;e.renderer.rules.image=(i,n,r,a,l)=>{const t=i[n],o=t.children?.[0]?.content;if(o){const h=L.exec(o);if(h){const[,u,d,m]=h,c=u.trim(),f=Number(d),p=Number(m);if(!f&&!p)return s(i,n,r,a,l);t.content=c,t.children[0].content=c,f&&t.attrSet("width",d),p&&t.attrSet("height",m)}}return s(i,n,r,a,l)}},b=/^(.*?)\s+=(\d*)\s*(?:x(\d*))?$/,v=e=>{const s=e.renderer.rules.image;e.renderer.rules.image=(i,n,r,a,l)=>{const t=i[n],o=t.children?.[0]?.content;if(o){const h=b.exec(o);if(h){const[,u,d,m]=h;if(!d&&!m)return s(i,n,r,a,l);t.content=u.trim(),t.children[0].content=u,d&&t.attrSet("width",d),m&&t.attrSet("height",m)}}return s(i,n,r,a,l)}};export{v as imgSize,x as legacyImgSize,S as obsidianImgSize};
//# sourceMappingURL=index.js.map
