{"version":3,"file":"index.js","sources":["../../src/client/composables/useBlogCategory.ts","../../src/client/composables/useBlogType.ts"],"sourcesContent":["import { categoriesMap } from '@temp/blog/category'\nimport { store } from '@temp/blog/store'\nimport type { ComputedRef } from 'vue'\nimport { computed, readonly, shallowRef } from 'vue'\nimport { resolveRoute, useData } from 'vuepress/client'\nimport type {\n  BlogCategoryFrontmatterOptions,\n  CategoriesMap,\n} from '../../shared/index.js'\nimport type { BlogCategoryData } from '../typings.js'\n\ndeclare const __BLOG_META_SCOPE__: string\n\nconst categoryMapRef = shallowRef(categoriesMap)\n\nexport const blogCategoryMap = readonly(categoryMapRef)\n\nexport const useBlogCategory = <\n  T extends Record<string, unknown> = Record<string, unknown>,\n>(\n  key?: string,\n): ComputedRef<BlogCategoryData<T>> => {\n  const { frontmatter, page, routeLocale } = useData<{\n    blog?: BlogCategoryFrontmatterOptions\n  }>()\n\n  return computed(() => {\n    const mapKey = key ?? frontmatter.value.blog?.key ?? ''\n\n    if (!mapKey) {\n      // eslint-disable-next-line no-console\n      console.warn(`useBlogCategory: key not found`)\n\n      // Fallback data\n      return { path: '/', map: {} }\n    }\n\n    if (!(mapKey in categoryMapRef.value))\n      throw new Error(`useBlogCategory: key ${mapKey} is invalid`)\n\n    const currentMap = categoryMapRef.value[mapKey][routeLocale.value]\n    const result: BlogCategoryData<T> = {\n      path: currentMap.path,\n      map: {},\n    }\n\n    for (const category in currentMap.map) {\n      const categoryMap = currentMap.map[category]\n\n      result.map[category] = { path: categoryMap.path, items: [] }\n\n      for (const index of categoryMap.indexes) {\n        const { path, meta } = resolveRoute(store[index])\n\n        result.map[category].items.push({\n          path,\n          info:\n            __BLOG_META_SCOPE__ === ''\n              ? (meta as T)\n              : (meta[__BLOG_META_SCOPE__] as T),\n        })\n      }\n\n      if (page.value.path === categoryMap.path)\n        result.currentItems = result.map[category].items\n    }\n\n    return result\n  })\n}\n\nif (__VUEPRESS_DEV__ && (import.meta.webpackHot || import.meta.hot))\n  __VUE_HMR_RUNTIME__.updateBlogCategory = (value: CategoriesMap): void => {\n    categoryMapRef.value = value\n  }\n","import { store } from '@temp/blog/store'\nimport { typesMap } from '@temp/blog/type'\nimport type { ComputedRef } from 'vue'\nimport { computed, readonly, shallowRef } from 'vue'\nimport { resolveRoute, useData } from 'vuepress/client'\nimport type {\n  BlogTypeFrontmatterOptions,\n  TypesMap,\n} from '../../shared/index.js'\nimport type { BlogTypeData } from '../typings.js'\n\ndeclare const __BLOG_META_SCOPE__: string\n\nconst typeMapRef = shallowRef(typesMap)\n\nexport const blogTypeMap = readonly(typeMapRef)\n\nexport const useBlogType = <\n  T extends Record<string, unknown> = Record<string, unknown>,\n>(\n  key?: string,\n): ComputedRef<BlogTypeData<T>> => {\n  const { frontmatter, routeLocale } = useData<{\n    blog?: BlogTypeFrontmatterOptions\n  }>()\n\n  return computed(() => {\n    const mapKey = key ?? frontmatter.value.blog?.key ?? ''\n\n    if (!mapKey) {\n      // eslint-disable-next-line no-console\n      console.warn(`useBlogType: key not found`)\n\n      // Fallback data\n      return { path: '/', items: [] }\n    }\n\n    if (!(mapKey in typeMapRef.value))\n      throw new Error(`useBlogType: key ${key} is invalid`)\n\n    const configMap = typeMapRef.value[mapKey][routeLocale.value]\n    const result: BlogTypeData<T> = {\n      path: configMap.path,\n      items: [],\n    }\n\n    for (const index of configMap.indexes) {\n      const { path, meta } = resolveRoute(store[index])\n\n      result.items.push({\n        path,\n        info:\n          __BLOG_META_SCOPE__ === ''\n            ? (meta as T)\n            : (meta[__BLOG_META_SCOPE__] as T),\n      })\n    }\n\n    return result\n  })\n}\n\nif (__VUEPRESS_DEV__ && (import.meta.webpackHot || import.meta.hot))\n  __VUE_HMR_RUNTIME__.updateBlogType = (value: TypesMap): void => {\n    typeMapRef.value = value\n  }\n"],"names":["categoryMapRef","shallowRef","categoriesMap","blogCategoryMap","readonly","useBlogCategory","key","frontmatter","page","routeLocale","useData","computed","mapKey","currentMap","result","category","categoryMap","index","path","meta","resolveRoute","store","value","typeMapRef","typesMap","blogTypeMap","useBlogType","configMap"],"mappings":"iQAaA,MAAMA,EAAiBC,EAAWC,CAAa,EAElCC,EAAkBC,EAASJ,CAAc,EAEzCK,EAGXC,GACqC,CACrC,KAAM,CAAE,YAAAC,EAAa,KAAAC,EAAM,YAAAC,CAAY,EAAIC,EAI3C,EAAA,OAAOC,EAAS,IAAM,CACpB,MAAMC,EAASN,GAAOC,EAAY,MAAM,MAAM,KAAO,GAErD,GAAI,CAACK,EAEH,OAAA,QAAQ,KAAK,gCAAgC,EAGtC,CAAE,KAAM,IAAK,IAAK,CAAG,CAAA,EAG9B,GAAI,EAAEA,KAAUZ,EAAe,OAC7B,MAAM,IAAI,MAAM,wBAAwBY,CAAM,aAAa,EAE7D,MAAMC,EAAab,EAAe,MAAMY,CAAM,EAAEH,EAAY,KAAK,EAC3DK,EAA8B,CAClC,KAAMD,EAAW,KACjB,IAAK,CACP,CAAA,EAEA,UAAWE,KAAYF,EAAW,IAAK,CACrC,MAAMG,EAAcH,EAAW,IAAIE,CAAQ,EAE3CD,EAAO,IAAIC,CAAQ,EAAI,CAAE,KAAMC,EAAY,KAAM,MAAO,EAAG,EAE3D,UAAWC,KAASD,EAAY,QAAS,CACvC,KAAM,CAAE,KAAAE,EAAM,KAAAC,CAAK,EAAIC,EAAaC,EAAMJ,CAAK,CAAC,EAEhDH,EAAO,IAAIC,CAAQ,EAAE,MAAM,KAAK,CAC9B,KAAAG,EACA,KACE,sBAAwB,GACnBC,EACAA,EAAK,mBAAmB,CACjC,CAAC,CACH,CAEIX,EAAK,MAAM,OAASQ,EAAY,OAClCF,EAAO,aAAeA,EAAO,IAAIC,CAAQ,EAAE,MAC/C,CAEA,OAAOD,CACT,CAAC,CACH,EAEI,mBAAqB,YAAY,YAAc,YAAY,OAC7D,oBAAoB,mBAAsBQ,GAA+B,CACvEtB,EAAe,MAAQsB,CACzB,GC7DF,MAAMC,EAAatB,EAAWuB,CAAQ,EAEzBC,EAAcrB,EAASmB,CAAU,EAEjCG,EAGXpB,GACiC,CACjC,KAAM,CAAE,YAAAC,EAAa,YAAAE,CAAY,EAAIC,IAIrC,OAAOC,EAAS,IAAM,CACpB,MAAMC,EAASN,GAAOC,EAAY,MAAM,MAAM,KAAO,GAErD,GAAI,CAACK,EAEH,OAAA,QAAQ,KAAK,4BAA4B,EAGlC,CAAE,KAAM,IAAK,MAAO,CAAG,CAAA,EAGhC,GAAI,EAAEA,KAAUW,EAAW,OACzB,MAAM,IAAI,MAAM,oBAAoBjB,CAAG,aAAa,EAEtD,MAAMqB,EAAYJ,EAAW,MAAMX,CAAM,EAAEH,EAAY,KAAK,EACtDK,EAA0B,CAC9B,KAAMa,EAAU,KAChB,MAAO,CAAA,CACT,EAEA,UAAWV,KAASU,EAAU,QAAS,CACrC,KAAM,CAAE,KAAAT,EAAM,KAAAC,CAAK,EAAIC,EAAaC,EAAMJ,CAAK,CAAC,EAEhDH,EAAO,MAAM,KAAK,CAChB,KAAAI,EACA,KACE,sBAAwB,GACnBC,EACAA,EAAK,mBAAmB,CACjC,CAAC,CACH,CAEA,OAAOL,CACT,CAAC,CACH,EAEI,mBAAqB,YAAY,YAAc,YAAY,OAC7D,oBAAoB,eAAkBQ,GAA0B,CAC9DC,EAAW,MAAQD,CACrB"}