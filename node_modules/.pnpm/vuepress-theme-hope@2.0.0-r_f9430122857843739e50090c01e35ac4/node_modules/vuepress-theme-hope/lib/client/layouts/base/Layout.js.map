{"version":3,"file":"Layout.js","sourceRoot":"","sources":["../../../../src/client/layouts/base/Layout.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AAE7D,OAAO,EAAE,eAAe,EAAE,CAAC,EAAE,gBAAgB,EAAE,MAAM,KAAK,CAAC;AAE3D,OAAO,sBAAsB,MAAM,oDAAoD,CAAC;AACxF,OAAO,UAAU,MAAM,wCAAwC,CAAC;AAChE,OAAO,WAAW,MAAM,yCAAyC,CAAC;AAClE,OAAO,QAAQ,MAAM,sCAAsC,CAAC;AAC5D,OAAO,QAAQ,MAAM,sCAAsC,CAAC;AAC5D,OAAO,aAAa,MAAM,2CAA2C,CAAC;AACtE,OAAO,EAAE,OAAO,EAAE,MAAM,iCAAiC,CAAC;AAa1D,eAAe,eAAe,CAAC;IAC7B,IAAI,EAAE,QAAQ;IAEd,KAAK,EAAE,MAqCL;IAEF,KAAK,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE;QACrB,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE,GAAG,OAAO,EAA4B,CAAC;QAElE,OAAO,GAAY,EAAE,CAAC;YACpB,CAAC,CAAC,QAAQ,CAAC;YACX,CAAC,CACC,UAAU,EACV,EAAE,EACF;gBACE,GAAG,KAAK;gBACR,OAAO,EACL,KAAK,CAAC,OAAO;oBACb,CAAC,GAAU,EAAE,CACX,WAAW,CAAC,KAAK,CAAC,SAAS;wBACzB,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,EAAE,EAAE,KAAK,CAAC;wBAC7B,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI;4BACtB,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,EAAE,KAAK,CAAC;4BACxB,CAAC,CAAC,CAAC,CAAC,sBAAsB,EAAE,GAAG,EAAE,CAC7B,CAAC,CAAC,WAAW,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,KAAK,CAAC,CAChD,CAAC;gBAEZ,eAAe,EACb,KAAK,CAAC,eAAe;oBACrB,CAAC,kBAAkB,CAAC,aAAa,CAAC;wBAChC,CAAC,CAAC,GAAgB,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;wBACvD,CAAC,CAAC,IAAI,CAAC;aACZ,CACF;SACF,CAAC;IACJ,CAAC;CACF,CAAC,CAAC","sourcesContent":["import type { HeaderItem, Slot, SlotContent } from \"@vuepress/helper/client\";\nimport { hasGlobalComponent } from \"@vuepress/helper/client\";\nimport type { SlotsType, VNode } from \"vue\";\nimport { defineComponent, h, resolveComponent } from \"vue\";\n\nimport MainFadeInUpTransition from \"@theme-hope/components/base/MainFadeInUpTransition\";\nimport MainLayout from \"@theme-hope/components/base/MainLayout\";\nimport PageContent from \"@theme-hope/components/base/PageContent\";\nimport SkipLink from \"@theme-hope/components/base/SkipLink\";\nimport HomePage from \"@theme-hope/components/home/HomePage\";\nimport PortfolioHome from \"@theme-hope/components/home/PortfolioHome\";\nimport { useData } from \"@theme-hope/composables/useData\";\nimport type { SidebarItem } from \"@theme-hope/typings/sidebar\";\nimport type {\n  HeroBackgroundSlotData,\n  HeroImageSlotData,\n  HeroInfoSlotData,\n  PortfolioAvatarSlotData,\n  PortfolioBackgroundSlotData,\n  PortfolioInfoSlotData,\n} from \"@theme-hope/typings/slots\";\n\nimport type { ThemeBasePageFrontmatter } from \"../../../shared/index.js\";\n\nexport default defineComponent({\n  name: \"Layout\",\n\n  slots: Object as SlotsType<{\n    default?: Slot;\n\n    // navbar\n    navScreenTop?: Slot;\n    navScreenBottom?: Slot;\n\n    // sidebar\n    sidebarItems?: (sidebarItems: SidebarItem[]) => SlotContent;\n    sidebarTop?: Slot;\n    sidebarBottom?: Slot;\n\n    // page\n    pageTop?: Slot;\n    pageBottom?: Slot;\n\n    // content\n    content?: Slot;\n    contentBefore?: Slot;\n    contentAfter?: Slot;\n\n    // toc\n    toc?: (headers: HeaderItem[]) => SlotContent;\n    tocBefore?: Slot;\n    tocAfter?: Slot;\n\n    // home only\n    heroInfo?: (props: HeroInfoSlotData) => SlotContent;\n    heroLogo?: (props: HeroImageSlotData) => SlotContent;\n    heroBg?: (props: HeroBackgroundSlotData) => SlotContent;\n    heroBefore?: Slot;\n    heroAfter?: Slot;\n\n    // portfolio only\n    portfolioInfo?: (props: PortfolioInfoSlotData) => SlotContent;\n    portfolioAvatar?: (props: PortfolioAvatarSlotData) => SlotContent;\n    portfolioBg?: (props: PortfolioBackgroundSlotData) => SlotContent;\n  }>,\n\n  setup(_props, { slots }) {\n    const { frontmatter, page } = useData<ThemeBasePageFrontmatter>();\n\n    return (): VNode[] => [\n      h(SkipLink),\n      h(\n        MainLayout,\n        {},\n        {\n          ...slots,\n          default:\n            slots.default ??\n            ((): VNode =>\n              frontmatter.value.portfolio\n                ? h(PortfolioHome, {}, slots)\n                : frontmatter.value.home\n                  ? h(HomePage, {}, slots)\n                  : h(MainFadeInUpTransition, () =>\n                      h(PageContent, { key: page.value.path }, slots),\n                    )),\n\n          navScreenBottom:\n            slots.navScreenBottom ??\n            (hasGlobalComponent(\"BloggerInfo\")\n              ? (): SlotContent => h(resolveComponent(\"BloggerInfo\"))\n              : null),\n        },\n      ),\n    ];\n  },\n});\n"]}