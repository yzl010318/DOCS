import { PhotoSwipeOptions as PhotoSwipeOptions$1 } from 'photoswipe';
import { Ref, MaybeRefOrGetter, App } from 'vue';

type PhotoSwipeOptions = Omit<PhotoSwipeOptions$1, 'dataSource' | 'index'>;
type PhotoSwipeOptionsRef = Ref<PhotoSwipeOptions>;
declare const definePhotoSwipeConfig: (options: MaybeRefOrGetter<PhotoSwipeOptions>) => void;
declare const usePhotoSwipeOptions: () => PhotoSwipeOptionsRef;
declare const injectPhotoSwipeConfig: (app: App) => void;

interface PhotoSwipePluginLocaleData {
    /**
     * Close button label text
     *
     * 关闭按钮标签文字
     */
    close: string;
    /**
     * Download button label text
     *
     * 下载按钮标签文字
     */
    download: string;
    /**
     * Full screen button label text
     *
     * 全屏按钮标签文字
     */
    fullscreen: string;
    /**
     * Zoom button label text
     *
     * 缩放按钮标签文字
     */
    zoom: string;
    /**
     * Previous image button label text
     *
     * 上一张图片按钮标签文字
     */
    arrowPrev: string;
    /**
     * Next image button label text
     *
     * 下一张图片按钮标签文字
     */
    arrowNext: string;
}

interface PhotoSwipeBehaviorOptions {
    download?: boolean;
    fullscreen?: boolean;
    scrollToClose?: boolean;
}

interface UsePhotoSwipeOptions extends PhotoSwipeBehaviorOptions {
    selector: string[] | string;
    locales: Record<string, Record<`${keyof PhotoSwipePluginLocaleData}Title`, string>>;
}
declare const usePhotoSwipe: ({ selector, locales, download, fullscreen, scrollToClose, }: UsePhotoSwipeOptions) => void;

interface PhotoSwipeState {
    open: (index: number) => void;
    close: () => void;
    destroy: () => void;
}
declare const createPhotoSwipe: (images: string[], { scrollToClose, download, fullscreen, ...photoSwipeOptions }: PhotoSwipeBehaviorOptions & PhotoSwipeOptions) => Promise<PhotoSwipeState>;

export { createPhotoSwipe, definePhotoSwipeConfig, injectPhotoSwipeConfig, usePhotoSwipe, usePhotoSwipeOptions };
export type { PhotoSwipeBehaviorOptions, PhotoSwipeOptions, PhotoSwipeOptionsRef, PhotoSwipePluginLocaleData, UsePhotoSwipeOptions };
